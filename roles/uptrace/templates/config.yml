#jinja2: trim_blocks:False
# {{ ansible_managed }}

# =============================================================================
# Uptrace Configuration File
# =============================================================================
# Complete configuration reference: https://uptrace.dev/get/hosted/config
#
# Environment Variable Support:
#   - Simple substitution: foo: $FOO
#   - With braces: bar: ${BAR}
#   - With defaults: baz: ${BAZ:default_value}
#   - To escape '$': foo: $$FOO_BAR
# =============================================================================

# -----------------------------------------------------------------------------
# Service Configuration
# -----------------------------------------------------------------------------
# Core service settings that define the runtime environment
service:
  env: hosted                      # Environment: hosted, development, production
  secret: {{ secret }}             # Secret key for cryptographic operations (CHANGE THIS!)

# -----------------------------------------------------------------------------
# Site Configuration
# -----------------------------------------------------------------------------
# External-facing site settings
site:
  # Public URL for the UI and DSN endpoint
  # NOTE: Port should match listen.http.addr unless using a reverse proxy
  url: {{ site_url }}

# -----------------------------------------------------------------------------
# Network Listeners
# -----------------------------------------------------------------------------
# Configure addresses where Uptrace accepts incoming requests
listen:
  # HTTP server for OTLP/HTTP API and Vue.js UI
  http:
    addr: :443

  # gRPC server for OTLP/gRPC API
  grpc:
    addr: :4317

  # TLS configuration (uncomment to enable HTTPS/secure gRPC)
  #tls:
  #  cert_file: config/tls/uptrace.crt
  #  key_file: config/tls/uptrace.key

# -----------------------------------------------------------------------------
# Authentication & Authorization
# -----------------------------------------------------------------------------
auth:
  # Set to true to disable username/password authentication
  # Note: SSO authentication will remain available
  #disabled: true

  # Email address validation pattern (optional)
  # Only users with matching email addresses can register/login
  # Example: '^.+@example\.com$' restricts to @example.com domain
  #email_regexp: '^.+@example\.com$'

# -----------------------------------------------------------------------------
# Bootstrap Data
# -----------------------------------------------------------------------------
# Initial data created on first startup
seed_data:
  {{ seed_data|to_nice_yaml(indent=2)|indent(2) }}

# -----------------------------------------------------------------------------
# ClickHouse Database Configuration
# -----------------------------------------------------------------------------
# Primary storage for telemetry data (spans, logs, metrics)
ch_cluster:
  cluster: {{ ch_cluster }}

  # Enable ClickHouse replicated tables for high availability
  # Requires cluster configuration
  replicated: {{ ch_distributed }}

  # Enable ClickHouse distributed tables for horizontal scaling
  # Requires cluster configuration and Premium Edition
  distributed: {{ ch_distributed }}

  shards:
    {% for ch_shard in ch_shards %}
    - replicas:
        {% for host in groups['clickhouse_server'] %}
        {% if hostvars[host].ch_shard == ch_shard %}
        - addr: {{ host }}:9000
          database: {{ ch_db_name }}
          user: {{ ch_db_user }}
          password: {{ ch_db_password }}

          # Connection timeouts
          dial_timeout: 3s
          write_timeout: 5s
          max_retries: 3

          # Query execution limit
          max_execution_time: 15s

          # TLS configuration (uncomment for secure connections)
          #tls:
          #  insecure_skip_verify: true  # WARNING: Only use for self-signed certificates
      {% endif %}
    {% endfor %}
  {% endfor %}

# -----------------------------------------------------------------------------
# PostgreSQL Database Configuration
# -----------------------------------------------------------------------------
# Metadata storage (users, projects, dashboards, etc.)
pg:
  addr: {{ groups.postgresql.0 }}:5432
  user: {{ pg_db_user }}
  password: {{ pg_db_password }}
  database: {{ pg_db_name }}

  # TLS configuration (uncomment for secure connections)
  #tls:
  #  insecure_skip_verify: true  # WARNING: Only use for self-signed certificates

  conn_pool_addr: "{{ groups.postgresql.0 }}:6543"

  replicas:
{%- for host in groups.postgresql %}
  {%- if hostvars[host].pg_replica_of is defined %}
    - {{ host }}:6543
  {%- endif %}
{%- endfor %}

# -----------------------------------------------------------------------------
# ClickHouse Schema Configuration
# -----------------------------------------------------------------------------
# Advanced schema settings - requires 'ch reset' to apply changes
ch_schema:
  # Compression algorithm: LZ4, ZSTD(1), or Default
  compression: ZSTD(1)

  # Storage policies for different data types
  spans_index:
    storage_policy: default
  spans_data:
    storage_policy: default
  span_links:
    storage_policy: default
  logs_index:
    storage_policy: default
  logs_data:
    storage_policy: default
  events_index:
    storage_policy: default
  events_data:
    storage_policy: default
  metrics:
    storage_policy: default

# -----------------------------------------------------------------------------
# Redis Cache Configuration
# -----------------------------------------------------------------------------
# In-memory cache for improved query performance and session storage
redis_cache:
  addrs:
    {%- for host in groups.redis_cache %}
    hostvars[host].redis_node_id: {{ host }}:{{ hostvars[host].redis_port|default(6379) }}
    {%- endfor %}

  # TLS configuration (uncomment for secure connections)
  #tls:
  #  insecure_skip_verify: true  # WARNING: Only use for self-signed certificates

# -----------------------------------------------------------------------------
# SSL/TLS Certificate Management
# -----------------------------------------------------------------------------
# Automatic certificate issuance and renewal via Let's Encrypt
certmagic:
  enabled: {{ certmagic_enabled }}                # Enable Let's Encrypt certificate management
  staging_ca: {{ certmagic_staging_ca }}          # Use staging environment for testing
  http_challenge_addr: :80                        # Address for HTTP-01 challenge validation

# -----------------------------------------------------------------------------
# Email Configuration
# -----------------------------------------------------------------------------
# Required for alert notifications and user management
# Documentation: https://uptrace.dev/features/alerting
mailer:
  smtp:
    enabled: false              # Enable email notifications
    host: localhost             # SMTP server hostname
    port: 1025                  # SMTP server port
    username: mailhog           # SMTP authentication username
    password: mailhog           # SMTP authentication password
    from: uptrace@localhost   # Sender email address

    # TLS configuration (uncomment to disable opportunistic TLS)
    #tls: { disabled: true }

# -----------------------------------------------------------------------------
# Telemetry Data Processing Configuration
# -----------------------------------------------------------------------------

# Spans (distributed tracing data)
spans:
  # Processing parallelism (default: GOMAXPROCS)
  #max_threads: 10

  # Batch size for database insertions
  #max_insert_size: 10000

  # Buffer capacity - spans are dropped when full
  # Default scales with max_threads
  #max_buffered_records: 100e3

# Span links
span_links:
  # Uncomment to disable span link processing
  #disabled: true

  #max_threads: 10              # Processing parallelism
  #max_insert_size: 10000       # Batch size for insertions
  #max_buffered_records: 100e3  # Buffer capacity

# Application logs
logs:
  #max_threads: 10              # Processing parallelism
  #max_insert_size: 10000       # Batch size for insertions
  #max_buffered_records: 100e3  # Buffer capacity

# Custom events
events:
  #max_threads: 10              # Processing parallelism
  #max_insert_size: 10000       # Batch size for insertions
  #max_buffered_records: 100e3  # Buffer capacity

# Metrics and time series data
metrics:
  #max_threads: 10              # Processing parallelism
  #max_insert_size: 10000       # Batch size for insertions
  #max_buffered_records: 100e3  # Buffer capacity

  # Cumulative to delta conversion capacity
  #max_cumulative_timeseries: 1e6

# -----------------------------------------------------------------------------
# Query & Performance Limits
# -----------------------------------------------------------------------------
# Trace query resource limits
trace:
  # Maximum spans to select per query
  #query_limit: 200_000

  # Maximum memory usage per query (bytes)
  #max_memory_usage_bytes: 200_000_000

# -----------------------------------------------------------------------------
# Feature Modules
# -----------------------------------------------------------------------------

# Monitoring and alerting system
alerting:
  # Uncomment to disable monitoring and notifications
  #disabled: true

# Service dependency graph generation
service_graph:
  # Uncomment to disable service graph processing
  #disabled: true

# JavaScript error sourcemap processing
# Note: Requires internet access to download source maps
sourcemaps:
  # Uncomment to disable sourcemap processing
  #disabled: true

# -----------------------------------------------------------------------------
# External Services
# -----------------------------------------------------------------------------

# Internal telemetry collection
uptrace_go:
  # Uncomment to disable internal telemetry
  #disabled: true
  dsn: {{ uptrace_dsn }}

# Telegram bot for notifications
# Setup guide: https://sendpulse.com/knowledge-base/chatbot/telegram/create-telegram-chatbot
telegram:
  bot_token: ''                 # Telegram bot token for notifications

# -----------------------------------------------------------------------------
# System Configuration
# -----------------------------------------------------------------------------

# Application logging
logging:
  # Available levels: DEBUG, INFO, WARN, ERROR
  level: INFO

# Premium features license
# Details: https://uptrace.dev/get/hosted#premium-edition
license:
  key: ''                       # Premium license key
